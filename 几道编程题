//1
#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <stdlib.h>
//计数器方式
int my_strlen1(const char * str)
{
	int count = 0;
	while (*str)
	{
		count++;
		str++;
	}
	return count;
}
//不能创建临时变量计数器
int my_strlen2(const char * str)
{
	if (*str == '\0')
		return 0;
	else
		return 1 + my_strlen2(str + 1);
}
//指针-指针的方式
int my_strlen3(char *s)
{
	char *p = s;
	while (*p != '\0')
		p++;
	return p - s;
}
int main()
{
	char str[] = "abcdef";
	printf("长度为:%d\n", my_strlen1(str));
	printf("长度为:%d\n", my_strlen2(str));
	printf("长度为:%d\n", my_strlen3(str));
	system("pause");
	return 0;
}
//2
#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
//将src指向的C字符串复制到dest指向的数组中，包括终止空字符（并在该点停止）。
char *my_strcpy1(char *dest, const char*src)
{
	char* ret = dest;
	assert((dest != NULL) && (src != NULL));
	while (*dest++ = *src++)
	{
		;
	}
	return ret;
}
char *my_strcpy2(char *dest, const char*src)
{
	char* ret = dest;
	assert((dest != NULL) && (src != NULL));
	while (*src != '\0')
	{
		*dest++ = *src++;
	}
		*dest = '\0';//注意拷贝条件,否则会死循环.因此应该手动赋值.
		return ret;
}
int main()
{
	char arr2[20] = "0";
	char arr1[] = "hello";
	char *tem1 = my_strcpy1(arr2, arr1);
	char *tem2 = my_strcpy2(arr2, arr1);
	printf("%s\n", tem1);
	printf("%s\n", tem2);
	system("pause");
	return 0;
}

//3
 #define _CRT_SECURE_NO_WARNINGS 1
 #include <stdio.h>
 #include <stdlib.h>
 #include <assert.h>
 char *my_strcat(char *dest, const char*src)
 {
 	char*ret = dest;
 	assert((dest != NULL) && (src != NULL));
 	while (*dest!='\0')
 	{
 		dest++;
 	}
 	while (*dest++ = *src++)
 	{
 		;
 	}
 //	//或者上面while循环可用下面注释中代码替换
 // 	while (*src)
 // 	{
 // 		*dest = *src;
 // 		src++;
 // 		dest++;
 // 	}
 // 	*dest = '\0';//注意手动赋值,避免死循环.
 	return ret;
 }
 int main()
 {
 	char arr1[] = "hello";
 	char arr2[] = "~biubiu";
 	char*tem1=my_strcat(arr1, arr2);
 	printf("%s\n", arr1);
 	system("pause");
 	return 0;
 }

//4
#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
char*my_strstr(const char *str1, const char* str2)
{
	char *ret1 = (char *)str1;
	char *ret2 = (char *)str2;
	char *sout = NULL;
	assert(str1 != NULL && str2 != NULL);
	if (*str2 == '\0')
	{
		return NULL;
	}
	while (*ret1)
	{
		sout = ret1;
		ret2 = str2;
		while (*sout && *ret2 && (*sout == *ret2))
		{
			sout++;
			ret2++;
		}
		if (*ret2 == '\0')
			return ret1;
		ret1++;
	}
}

int main()
{
	char arr1[] = "abcdef";
	char arr2[] = "cd";
	printf("%s\n", my_strstr(arr1, arr2));
	printf("%s\n", strstr(arr1, arr2));
	system("pause");
	return 0;
}

