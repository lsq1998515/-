/*
//题目描述
A,B,C三个人是好朋友,每个人手里都有一些糖果,我们不知道他们每个人手上具体有多少个糖果,但是我们知道以下的信息：
A - B, B - C, A + B, B + C. 这四个数值.每个字母代表每个人所拥有的糖果数.
现在需要通过这四个数值计算出每个人手里有多少个糖果,即A,B,C。这里保证最多只有一组整数A,B,C满足所有题设条件。
输入描述:
输入为一行，一共4个整数，分别为A - B，B - C，A + B，B + C，用空格隔开。 范围均在-30到30之间(闭区间)。
输出描述:
输出为一行，如果存在满足的整数A，B，C则按顺序输出A，B，C，用空格隔开，行末无空格。 如果不存在这样的整数A，B，C，则输出No
示例1
输入

1 -2 3 4

输出

2 1 3
*/

//代码
#include<iostream>
using namespace std;
#include<string>
#include <cstdlib>
//A+B=a;
//B-C=b;
//A+B=c;
//B+C=d;
//A=(a+c)/2;B=(b+d)/2;C=(c-a)/2-b
int main()
{
	int a, b, c, d;
	while (cin>>a>>b>>c>>d)
	{
		int A = (a + c) / 2; 
		int B = (b + d) / 2;
		int C = (c - a) / 2 - b;
		if (d ==c - a - b)
		{
			cout << A << " " << B << " " << C << endl;
		}
		else
			cout << "No" << endl;
	}
	return 0;
}
//【解题思路】：
//1、A - B = a 2、B - C = b 3、A + B = c 4、B + C = d 这道题目的实质是：判断三元一次方程组是否有解及求
//解， 这里是小学生都会的问题了^^ 1+3可以得到A=(a+c)/2；4-2可以得到C=(d-b)/2;
//2+4可以得到B2=(b+d)/2，3-1可以得到B1=(c-a)/2；
//如果B1不等B2则表达式无解
#include<iostream>
using namespace std;
int main()
{
	int a,b,c,d;
	cin>>a>>b>>c>>d;
	int A=(a+c)/2;
	int C=(d-b)/2;
	int B1=(c-a)/2;
	int B2=(b+d)/2;
	if(B1!=B2)
		cout<<"No";
	else
		cout<<A<<" "<<B1<<" "<<C;
	return 0;
}

/*
//题目描述
给定一个十进制数M，以及需要转换的进制数N。将十进制数M转化为N进制数
输入描述:
输入为一行，M(32位整数)、N(2 ≤ N ≤ 16)，以空格隔开。
输出描述:
为每个测试实例输出转换后的数，每个输出占一行。如果N大于9，则对应的数字规则参考16进制（比如，10用A表示，等等）
示例1
输入

7 2
输出

111
*/

//代码
#include <iostream>
using namespace std;
#include <string>
int main()
{
	int N, M;
	cin >> M >> N;
	if (M == 0)
	{
		cout << "0" << endl;
	}
	string s;
	string tmp = "0123456789ABCDEF";
	while (M)
	{
		if (M < 0)
		{
			M = -M;
			cout << "-";
		}
		s = tmp[M%N]+s;
		M /= N;
	}
	cout << s << endl;
	return 0;
}
