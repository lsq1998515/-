/*
一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。
*/

/*
【题目解析】：这个题目很容易理解，不过公式推导有些麻烦
假定第一次跳的是一阶，那么剩下的是n-1个台阶，跳法是f(n-1)； 假定第一次跳的是2阶，那么剩下的是n-2个台
阶，跳法是f(n-2)； 假定第一次跳的是3阶，那么剩下的是n-3个台阶，跳法是f(n-3)...... 假定第一次跳的是n-1阶，
那么剩下的是1个台阶，跳法是f(1)； 假定第一次跳的是n阶，那么剩下的是0个台阶，跳法是1种；
【解题思路】：
根据题图解析可以得出有一阶的时候 f(1) = 1 ； 有两阶的时候可以有 f(2) = 1+f(1)=2； 有三阶的时候可以有 f(3) =
1+f(2)+f(1)=4;
...
总跳法为: f(n) = 1+f(n-1) + f(n-2)+....+f(1) （第一个1是跳n阶只有一种方法）
依次类推，得到类推公式有n阶时：f(n)=2^(n-1)。
*/

class Solution {
public:
int jumpFloorII(int number) {
//2^(n-1) == 1 << (n-1)
return 1<<(number-1);
}
};

/*
链接：https://www.nowcoder.com/questionTerminal/82424d93369649b98720743c25edc6ce
来源：牛客网

小喵们很喜欢把自己装进容器里的（例如碗），但是要是碗的周长比喵的身长还短，它们就进不去了。

现在告诉你它们的身长，和碗的半径，请判断一下能否到碗里去。

输入描述:
输入有多组数据。

每组数据包含两个整数n (1≤n≤2^128) 和r (1≤r≤2^128)，分别代表喵的身长和碗的半径。

圆周率使用3.14。


输出描述:
对应每一组数据，如果喵能装进碗里就输出“Yes”；否则输出“No”。
示例1

6 1
7 1
9876543210 1234567890

Yes
No
No
*/

#include <iostream>
using namespace std;
int main(){
double n,r;
while(cin >> n >> r){
//周长：2*r*3.1415
//身长：n
if(n > (2*r*3.1415))
cout<<"No"<<endl;
else
cout<<"Yes"<<endl;
}
return 0;
}
